@import 'reset';
@import 'custom_properties';
@import 'variables';
@import 'mixin';

body {
  font-family: $baseFontFamily;
  font-weight: 400;
  line-height: #{$baseLineHeight};
  color: white;
  overflow: hidden;
}

img.bg {
  /* Set rules to fill background */
  min-height: 100%;
  min-width: 100%;
  object-fit: cover;

  /* Set up proportionate scaling */
  width: 100%;
  height: auto;

  /* Set up positioning */
  position: fixed;
  top: 0;
  left: 0;
  z-index: -1;
  filter: brightness(0.5);
}

@media screen and (max-width: 1024px) { /* Specific to this particular image */
  img.bg {
    left: 50%;
    margin-left: -512px;   /* 50% */
  }
}

/*.parallelogram {
  display: block;
  clip-path: polygon(20% 0%, 100% 0%, 80% 100%, 0% 100%);
  background: blue;
  height: 100vh;
  width: 100vw;
  position: absolute;
  top: 0;
  left: 0;
  z-index: 0;
}*/
.parallelogram {
  height: 100%;
  width: 100vw;
  background-image: url('../assets/parallelogram.svg');
  background-repeat: no-repeat;
  background-size: auto 100%;
  background-position: center;
  position: absolute;
  top: 0;
  left: 0;
  z-index: -1;
  -webkit-mask: url('../assets/arrow.svg') 0/100% 100%,
  linear-gradient(#fff,transparent);
  -webkit-mask-composite: destination-out;
  -webkit-mask-repeat: no-repeat;
  -webkit-mask-position: center;
  -webkit-mask-size: contain;
  filter: blur(5px);
  animation: animateparallelogram 5s ease-in;
  animation-iteration-count: infinite;
}

@keyframes animateparallelogram {
  0% {
    filter: blur(5px);
  }
  10% {
    filter: blur(6px);
  }
  20% {
    filter: blur(7px);
  }
  30% {
    filter: blur(8px);
  }
  40% {
    filter: blur(9px);
  }
  50% {
    filter: blur(10px);
  }
  60% {
    filter: blur(9px);
  }
  70% {
    filter: blur(8px);
  }
  80% {
    filter: blur(7px);
  }
  90% {
    filter: blur(6px);
  }
  100% {
    filter: blur(5px);
  }
}

/*

*?
 */
/*
@supports (-webkit-mask-image: url('../assets/parallelogram.svg')) {
  .parallelogram {
    -webkit-mask-image: url('../assets/parallelogram.svg');
    background-color: green !important;
  }
}
@supports not (-webkit-mask-image: url('../assets/parallelogram.svg')) {
  .parallelogram {
    background-image: url('../assets/parallelogram.svg');
    background-color: pink !important;
  }
}
@supports (mask-image: url('../assets/parallelogram.svg')) {
  .parallelogram {
    -webkit-mask-image: none;
    background-image: url('../assets/parallelogram.svg');
    background-color: blue!important;
  }
}*/


#svg {
  path {
    stroke: white;
    stroke-width: 1;
    fill: none;
    opacity: 0.5;
  }

  .frequency {
    rect {
      fill: white;

      &.background {
        fill: none;
        stroke: none;
      }
    }
  }
}

.towerblock {
  position: absolute;
  top: 0;
  z-index: 0;
  left: 0;
  animation-iteration-count: infinite;
  // height: 100vh; - put media query here
  @media screen and (max-height: 1000px) {
    //height: 100vh;
  }
  svg {
    filter: drop-shadow(0px 0px 4px rgba(255, 255, 255, 1));
    animation-iteration-count: infinite;
    fill: black;
    width: 100vw;
    height: auto;
  }
}
.blur {
  filter: blur(10px);
}
.hidden {
  display: none!important;
}

:root {
  --gap: 10px;
  --gap-vertical: 2px;
  --time-anim: 2s;
  --width-outline: 1px;
}

.play_icon {
  position: absolute;
  z-index: 1001;
  top: 50%;
  left: 50%;
  transform: translateX(-50%) translateY(-50%);
  cursor: pointer;
  width: 160px;
  height: 160px;
  img {
    filter: invert(100);
  }
  &::before {
    content: '';
    display: block;
    color: white;
    width: inherit;
    height: inherit;
    position: absolute;
    left: 0;
    top: 0;
    z-index: 101;
    pointer-events: none;
    background: white;
    opacity: 0;
    animation: glitch-anim-flash 1s alternate linear, glitch-anim-3 1s alternate linear, glitch-anim-1 1s alternate linear;
    animation-iteration-count: infinite;
    border-radius: 100%;
  }
  transition: all 2s ease-in;
  &:hover {
    &::before{
      animation-play-state: paused;
    }
    img {
      filter: invert(50) sepia(100%);
      opacity: 0.7;
    }
  }
}
@keyframes loaderAnim {
  to {
    opacity: 1;
    transform: scale3d(0.5,0.5,1);
  }
}
@keyframes glitch-anim-1 {
  0% { -webkit-clip-path: polygon(0 2%, 100% 2%, 100% 5%, 0 5%); clip-path: polygon(0 2%, 100% 2%, 100% 5%, 0 5%); }
  10% { -webkit-clip-path: polygon(0 15%, 100% 15%, 100% 15%, 0 15%); clip-path: polygon(0 15%, 100% 15%, 100% 15%, 0 15%); }
  20% { -webkit-clip-path: polygon(0 10%, 100% 10%, 100% 20%, 0 20%); clip-path: polygon(0 10%, 100% 10%, 100% 20%, 0 20%); }
  30% { -webkit-clip-path: polygon(0 1%, 100% 1%, 100% 2%, 0 2%); clip-path: polygon(0 1%, 100% 1%, 100% 2%, 0 2%); }
  40% { -webkit-clip-path: polygon(0 33%, 100% 33%, 100% 33%, 0 33%); clip-path: polygon(0 33%, 100% 33%, 100% 33%, 0 33%); }
  50% { -webkit-clip-path: polygon(0 44%, 100% 44%, 100% 44%, 0 44%); clip-path: polygon(0 44%, 100% 44%, 100% 44%, 0 44%); }
  60% { -webkit-clip-path: polygon(0 50%, 100% 50%, 100% 20%, 0 20%); clip-path: polygon(0 50%, 100% 50%, 100% 20%, 0 20%); }
  70% { -webkit-clip-path: polygon(0 70%, 100% 70%, 100% 70%, 0 70%); clip-path: polygon(0 70%, 100% 70%, 100% 70%, 0 70%); }
  80% { -webkit-clip-path: polygon(0 80%, 100% 80%, 100% 80%, 0 80%); clip-path: polygon(0 80%, 100% 80%, 100% 80%, 0 80%); }
  90% { -webkit-clip-path: polygon(0 50%, 100% 50%, 100% 55%, 0 55%); clip-path: polygon(0 50%, 100% 50%, 100% 55%, 0 55%); }
  100% { -webkit-clip-path: polygon(0 70%, 100% 70%, 100% 80%, 0 80%); clip-path: polygon(0 70%, 100% 70%, 100% 80%, 0 80%); }
}
@keyframes glitch-anim-2 {
  0% { -webkit-clip-path: polygon(0 25%, 100% 25%, 100% 30%, 0 30%); clip-path: polygon(0 25%, 100% 25%, 100% 30%, 0 30%); }
  15% { -webkit-clip-path: polygon(0 3%, 100% 3%, 100% 3%, 0 3%); clip-path: polygon(0 3%, 100% 3%, 100% 3%, 0 3%); }
  22% { -webkit-clip-path: polygon(0 5%, 100% 5%, 100% 20%, 0 20%); clip-path: polygon(0 5%, 100% 5%, 100% 20%, 0 20%); }
  31% { -webkit-clip-path: polygon(0 20%, 100% 20%, 100% 20%, 0 20%); clip-path: polygon(0 20%, 100% 20%, 100% 20%, 0 20%); }
  45% { -webkit-clip-path: polygon(0 40%, 100% 40%, 100% 40%, 0 40%); clip-path: polygon(0 40%, 100% 40%, 100% 40%, 0 40%); }
  51% { -webkit-clip-path: polygon(0 52%, 100% 52%, 100% 59%, 0 59%); clip-path: polygon(0 52%, 100% 52%, 100% 59%, 0 59%); }
  63% { -webkit-clip-path: polygon(0 60%, 100% 60%, 100% 60%, 0 60%); clip-path: polygon(0 60%, 100% 60%, 100% 60%, 0 60%); }
  76% { -webkit-clip-path: polygon(0 75%, 100% 75%, 100% 75%, 0 75%); clip-path: polygon(0 75%, 100% 75%, 100% 75%, 0 75%); }
  81% { -webkit-clip-path: polygon(0 65%, 100% 65%, 100% 40%, 0 40%); clip-path: polygon(0 65%, 100% 65%, 100% 40%, 0 40%); }
  94% { -webkit-clip-path: polygon(0 45%, 100% 45%, 100% 50%, 0 50%); clip-path: polygon(0 45%, 100% 45%, 100% 50%, 0 50%); }
  100% { -webkit-clip-path: polygon(0 14%, 100% 14%, 100% 33%, 0 33%); clip-path: polygon(0 14%, 100% 14%, 100% 33%, 0 33%); }
}
@keyframes glitch-anim-3 {
  0% { -webkit-clip-path: polygon(0 1%, 100% 1%, 100% 3%, 0 3%); clip-path: polygon(0 1%, 100% 1%, 100% 3%, 0 3%); }
  5% { -webkit-clip-path: polygon(0 10%, 100% 10%, 100% 9%, 0 9%); clip-path: polygon(0 10%, 100% 10%, 100% 9%, 0 9%); }
  10% { -webkit-clip-path: polygon(0 5%, 100% 5%, 100% 6%, 0 6%); clip-path: polygon(0 5%, 100% 5%, 100% 6%, 0 6%); }
  25% { -webkit-clip-path: polygon(0 20%, 100% 20%, 100% 20%, 0 20%); clip-path: polygon(0 20%, 100% 20%, 100% 20%, 0 20%); }
  27% { -webkit-clip-path: polygon(0 10%, 100% 10%, 100% 10%, 0 10%); clip-path: polygon(0 10%, 100% 10%, 100% 10%, 0 10%); }
  30% { -webkit-clip-path: polygon(0 30%, 100% 30%, 100% 25%, 0 25%); clip-path: polygon(0 30%, 100% 30%, 100% 25%, 0 25%); }
  33% { -webkit-clip-path: polygon(0 15%, 100% 15%, 100% 16%, 0 16%); clip-path: polygon(0 15%, 100% 15%, 100% 16%, 0 16%); }
  37% { -webkit-clip-path: polygon(0 40%, 100% 40%, 100% 39%, 0 39%); clip-path: polygon(0 40%, 100% 40%, 100% 39%, 0 39%); }
  40% { -webkit-clip-path: polygon(0 20%, 100% 20%, 100% 21%, 0 21%); clip-path: polygon(0 20%, 100% 20%, 100% 21%, 0 21%); }
  45% { -webkit-clip-path: polygon(0 60%, 100% 60%, 100% 55%, 0 55%); clip-path: polygon(0 60%, 100% 60%, 100% 55%, 0 55%); }
  50% { -webkit-clip-path: polygon(0 30%, 100% 30%, 100% 31%, 0 31%); clip-path: polygon(0 30%, 100% 30%, 100% 31%, 0 31%); }
  53% { -webkit-clip-path: polygon(0 70%, 100% 70%, 100% 69%, 0 69%); clip-path: polygon(0 70%, 100% 70%, 100% 69%, 0 69%); }
  57% { -webkit-clip-path: polygon(0 40%, 100% 40%, 100% 41%, 0 41%); clip-path: polygon(0 40%, 100% 40%, 100% 41%, 0 41%); }
  60% { -webkit-clip-path: polygon(0 80%, 100% 80%, 100% 75%, 0 75%); clip-path: polygon(0 80%, 100% 80%, 100% 75%, 0 75%); }
  65% { -webkit-clip-path: polygon(0 50%, 100% 50%, 100% 51%, 0 51%); clip-path: polygon(0 50%, 100% 50%, 100% 51%, 0 51%); }
  70% { -webkit-clip-path: polygon(0 90%, 100% 90%, 100% 90%, 0 90%); clip-path: polygon(0 90%, 100% 90%, 100% 90%, 0 90%); }
  73% { -webkit-clip-path: polygon(0 60%, 100% 60%, 100% 60%, 0 60%); clip-path: polygon(0 60%, 100% 60%, 100% 60%, 0 60%); }
  80% { -webkit-clip-path: polygon(0 100%, 100% 100%, 100% 99%, 0 99%); clip-path: polygon(0 100%, 100% 100%, 100% 99%, 0 99%); }
  100% { -webkit-clip-path: polygon(0 70%, 100% 70%, 100% 71%, 0 71%); clip-path: polygon(0 70%, 100% 70%, 100% 71%, 0 71%); }
}

@keyframes glitch-anim-flash {
  0% { opacity: 0; transform: translate3d(var(--gap), var(--gap-vertical), 0); }
  33%, 100% { opacity: 0.4; transform: translate3d(0, 0, 0); }
}

@keyframes glitch-anim-text {
  0% { opacity: 0; }
  30% { opacity: 1; transform: translate3d(-25px, -10px, 0); }
  37%, 100% { opacity: 1; transform: translate3d(0, 0, 0); }
}

.animation {
  animation: shake 0.5s cubic-bezier(.36, .07, .19, .97), blur 40s ease-in;
  animation-iteration-count: infinite;
}

@keyframes blur {
  0%, 48% {
    filter: blur(0)
  }
  50% {
    filter: blur(50px)
  }
  52%, 100% {
    filter: blur(0px)
  }
}

@keyframes shake {
  10%, 90% {
    transform: translate3d(-1px, 0, 0);
  }

  20%, 80% {
    transform: translate3d(1px, 0, 0);
  }

  40%, 80% {
    transform: translate3d(1px, 1px, 1px);
  }

  50%, 80% {
    transform: translate3d(0px, 2px, 1px);
  }

  30%, 50%, 70% {
    transform: translate3d(-1px, 0, 0);
  }

  40%, 60% {
    transform: translate3d(1px, 0, 0);
  }
}

